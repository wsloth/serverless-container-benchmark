name: Deploy Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'deploy/**'
      - '.github/workflows/infrastructure-deploy.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure CLI Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Install Bicep CLI
      run: az bicep install

    - name: Validate Bicep Templates
      run: |
        cd deploy
        ./validate.sh

    - name: Deploy Infrastructure
      run: |
        cd deploy
        echo "Deploying to production environment"
        
        # Update container image parameters if available
        if [[ -n "${{ vars.MINIMAL_API_IMAGE }}" ]]; then
          sed -i "s|#{MinimalApiImage}#|${{ vars.MINIMAL_API_IMAGE }}|g" parameters/prod.bicepparam
        else
          echo "::warning::MINIMAL_API_IMAGE variable not set, using 'latest' tag"
          sed -i "s|#{MinimalApiImage}#|latest|g" parameters/prod.bicepparam
        fi
        
        if [[ -n "${{ vars.BENCHMARK_RUNNER_IMAGE }}" ]]; then
          sed -i "s|#{BenchmarkRunnerImage}#|${{ vars.BENCHMARK_RUNNER_IMAGE }}|g" parameters/prod.bicepparam
        else
          echo "::warning::BENCHMARK_RUNNER_IMAGE variable not set, using 'latest' tag"
          sed -i "s|#{BenchmarkRunnerImage}#|latest|g" parameters/prod.bicepparam
        fi
        
        # Deploy the infrastructure
        deployment_name="scb-prod-$(date +%Y%m%d-%H%M%S)"
        
        az deployment group create \
          --resource-group serverless-container-benchmark \
          --name $deployment_name \
          --location westeurope \
          --template-file bicep/main.bicep \
          --parameters parameters/prod.bicepparam \
          --verbose

    - name: Output Deployment Results
      run: |
        cd deploy
        deployment_name="scb-prod-$(date +%Y%m%d-%H%M%S)"
        
        echo "## Deployment Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment Name:** $deployment_name" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Get deployment outputs
        outputs=$(az deployment sub show --name $deployment_name --query properties.outputs --output json)
        echo "**Deployment Outputs:**" >> $GITHUB_STEP_SUMMARY
        echo '```json' >> $GITHUB_STEP_SUMMARY
        echo "$outputs" | jq . >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY